/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/code-inspector-plugin@0.20.10";
exports.ids = ["vendor-chunks/code-inspector-plugin@0.20.10"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/code-inspector-plugin@0.20.10/node_modules/code-inspector-plugin/dist/append-code-5678.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/code-inspector-plugin@0.20.10/node_modules/code-inspector-plugin/dist/append-code-5678.js ***!
  \**********************************************************************************************************************/
/***/ (() => {

eval("/* eslint-disable */ /* __next_internal_client_entry_do_not_use__  auto */ ;\n(function() {\n    if (typeof globalThis === \"undefined\" || globalThis.__code_inspector_console) {\n        return;\n    }\n    ;\n    var path = \"data-insp-path\";\n    globalThis.__code_inspector_console = true;\n    var wrappers = [\n        {\n            type: \"error\",\n            origin: console.error\n        },\n        {\n            type: \"warn\",\n            origin: console.warn\n        }\n    ];\n    wrappers.forEach((wrapper)=>{\n        console[wrapper.type] = function() {\n            var args = Array.prototype.slice.call(arguments) || [];\n            var hasVueWarning = typeof args[0] === \"string\" && args[0].indexOf(path) !== -1; /* compatible for vue warning */ \n            if (hasVueWarning) {\n                return;\n            }\n            var hasNextWarning = typeof args[1] === \"string\" && args[1].indexOf(path) !== -1; /* compatible for nextjs hydrate */ \n            if (hasNextWarning) {\n                return;\n            }\n            var hasNextWarningV15 = typeof args[2] === \"string\" && args[2].indexOf(path) !== -1; /* compatible for nextjs(v15.0.0+) hydrate */ \n            if (hasNextWarningV15) {\n                return;\n            }\n            wrapper.origin.apply(null, args);\n        };\n    });\n})();\n;\n(function() {\n    if (false) { var inspector; }\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/code-inspector-plugin@0.20.10/node_modules/code-inspector-plugin/dist/append-code-5678.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/code-inspector-plugin@0.20.10/node_modules/code-inspector-plugin/dist/append-code-5678.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/code-inspector-plugin@0.20.10/node_modules/code-inspector-plugin/dist/append-code-5678.js ***!
  \**********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* eslint-disable */ /* __next_internal_client_entry_do_not_use__  auto */ const { createProxy } = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ \"(rsc)/./node_modules/.pnpm/next@14.1.0_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js\");\nmodule.exports = createProxy(\"F:\\\\Life\\\\Project\\\\interview\\\\node_modules\\\\.pnpm\\\\code-inspector-plugin@0.20.10\\\\node_modules\\\\code-inspector-plugin\\\\dist\\\\append-code-5678.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/code-inspector-plugin@0.20.10/node_modules/code-inspector-plugin/dist/append-code-5678.js\n");

/***/ })

};
;